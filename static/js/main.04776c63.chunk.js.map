{"version":3,"sources":["sketch.js"],"names":["data","model","xs","ys","shortData","r","g","b","w","labelList","colors","labels","colorData","entries","i","push","train","fitCallbacks","a","options","epochs","validationSplit","callbacks","batchSize","Math","floor","shape","shuffle","fit","metrics","container","name","tab","styles","height","tfvis","record","col","indexOf","label","tf","labelsTensor","dispose","add","dense","units","activation","inputShape","optimizer","adam","compile","loss","prepare","document","querySelector","addEventListener","watchTraining","then","setTimeout","toggle","setAttribute","attributes","removeNamedItem","factor","p5","setup","q","p","createElement","id","parent","windowWidth","createCanvas","random","style","backgroundColor","color","r_percent","g_percent","b_percent","backgroundImage","draw","background","windowResized","resizeCanvas","x","index","predict","argMax","dataSync","innerHTML"],"mappings":"mJAKIA,EACAC,EACAC,EAAIC,EAeJC,EAgFAC,EAAGC,EAAGC,EACNC,E,sEA9FAC,EAAY,CACf,UACA,YACA,WACA,aACA,aACA,WACA,aACA,YACA,YAEGC,EAAS,GACTC,EAAS,GAGbX,EAAOY,EACPR,EAAY,CAAES,QAAS,IACvB,IAAK,IAAIC,EAAI,EAAGA,EAAI,KAAOA,IAC1BV,EAAUS,QAAQE,KAAKf,EAAKa,QAAQC,I,SAwCtBE,E,oFAAf,WAAqBf,EAAOC,EAAIC,EAAIc,GAApC,eAAAC,EAAA,6DACOC,EAAU,CACfC,OA7Dc,IA8DdC,gBAAiB,GACjBC,UAAWL,EACXM,UAAWC,KAAKC,MAAMtB,EAAGuB,MAAM,GAAK,GACpCC,SAAS,GANX,SAQc1B,EAAM2B,IAAI1B,EAAIC,EAAIgB,GARhC,oF,kEAWA,gCAAAD,EAAA,6DACOW,EAAU,CAAC,OAAQ,WAAY,MAAO,WACtCC,EAAY,CACjBC,KAAM,iBACNC,IAAK,WACLC,OAAQ,CACPC,OAAQ,WAGJZ,EAAYa,OAAWlB,aAAaa,EAAWD,GATtD,SAUcb,EAAMf,EAAOC,EAAIC,EAAImB,GAVnC,oF,uBA/CA,SAAiBtB,GAAO,IAAD,gBACHA,EAAKa,SADF,IACtB,2BAAiC,CAAC,IAAzBuB,EAAwB,QAC5BC,EAAM,CAACD,EAAO/B,EAAI,IAAK+B,EAAO9B,EAAI,IAAK8B,EAAO7B,EAAI,KACtDG,EAAOK,KAAKsB,GACZ1B,EAAOI,KAAKN,EAAU6B,QAAQF,EAAOG,SAJhB,8BAMtBrC,EAAKsC,WAAY9B,GACjB,IAAI+B,EAAeD,WAAY7B,EAAQ,SACvCR,EAAKqC,SAAUC,EAAc,GAC7BA,EAAaC,WAEbzC,EAAQuC,gBAEFG,IACLH,SAAUI,MAAM,CACfC,MAAO,GACPC,WAAY,UACZC,WAAY,CAAC,MAIf9C,EAAM0C,IACLH,SAAUI,MAAM,CACfC,MAAO1C,EAAGuB,MAAM,GAChBoB,WAAY,aAId,IAAME,EAAYR,QAASS,KAAK,KAChChD,EAAMiD,QAAQ,CACbF,UAAWA,EACXG,KAAM,0BACNtB,QAAS,CAAC,cAlCZuB,CAAQhD,GA8DRiD,SAASC,cAAc,UAAUC,iBAAiB,SAAS,kB,0CAC1DC,GAAgBC,MAAK,WACpBC,YAAW,kBAAMvB,UAAcwB,WAAU,KACzCzD,EAAGwC,UACHvC,EAAGuC,UACHW,SAASC,cAAc,UAAUM,aAAa,WAAY,QAC1DP,SAASC,cAAc,SAASM,aAAa,WAAY,QACzDP,SAASC,cAAc,YAAYO,WAAWC,gBAAgB,kBAMhE,IAAIC,EAAS,GAgFb,IAAIC,KANW,SAAAA,GACdA,EAAGC,MAAQ,kBAzEE,SAAAD,GAEb,IADA,IAAME,EAAIb,SAASC,cAAc,WACxBxC,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC3B,IAAIqD,EAAIH,EAAGI,cACV,gBADO,gEAIRD,EAAEE,GAAF,YAAUvD,IACVqD,EAAEG,OAAOJ,GAGkBH,EAAxBC,EAAGO,aAAe,KAAe,GAC5BP,EAAGO,aAAe,KAAOP,EAAGO,YAAc,KAAe,GACpD,GAEd/D,EAAIwD,EAAGO,YAAcR,EACXC,EAAGQ,aAAahE,EAAGA,GAC3B8D,OAAO,iBACTjE,EAAI2D,EAAGS,OAAO,KACdnE,EAAI0D,EAAGS,OAAO,KACdlE,EAAIyD,EAAGS,OAAO,KACdpB,SAASC,cAAc,QAAQoB,MAAMC,gBAAkBX,EAAGY,MAAMvE,EAAGC,EAAGC,GACtE8C,SAASC,cAAc,MAAMoB,MAAMC,gBAAkBX,EAAGY,MAAMvE,EAAG,EAAG,GACpEgD,SAASC,cAAc,MAAMoB,MAAMC,gBAAkBX,EAAGY,MAAM,EAAGtE,EAAG,GACpE+C,SAASC,cAAc,MAAMoB,MAAMC,gBAAkBX,EAAGY,MAAM,EAAG,EAAGrE,GACpE,IAAIsE,EAAYb,EAAGvC,MAAOpB,EAAI,IAAO,KACjCyE,EAAYd,EAAGvC,MAAOnB,EAAI,IAAO,KACjCyE,EAAYf,EAAGvC,MAAOlB,EAAI,IAAO,KACrC8C,SAASC,cACR,MACCoB,MAAMM,gBAFR,gDAEmEH,EAFnE,eAGAxB,SAASC,cACR,MACCoB,MAAMM,gBAFR,gDAEmEF,EAFnE,eAGAzB,SAASC,cACR,MACCoB,MAAMM,gBAFR,gDAEmED,EAFnE,eAuCiBd,CAAMD,IACvBA,EAAGiB,KAAO,kBA3BE,SAAAjB,GACZA,EAAGkB,WAAW7E,EAAGC,EAAGC,GACpB8C,SAASC,cAAc,QAAQC,iBAAiB,SAAS,WACxDlD,EAAI2D,EAAGS,OAAO,KACdnE,EAAI0D,EAAGS,OAAO,KACdlE,EAAIyD,EAAGS,OAAO,KACdpB,SAASC,cAAc,QAAQoB,MAAMC,gBAAkBX,EAAGY,MAAMvE,EAAGC,EAAGC,GACtE8C,SAASC,cAAc,MAAMoB,MAAMC,gBAAkBX,EAAGY,MAAMvE,EAAG,EAAG,GACpEgD,SAASC,cAAc,MAAMoB,MAAMC,gBAAkBX,EAAGY,MAAM,EAAGtE,EAAG,GACpE+C,SAASC,cAAc,MAAMoB,MAAMC,gBAAkBX,EAAGY,MAAM,EAAG,EAAGrE,GACpE,IAAIsE,EAAaxE,EAAI,IAAO,IACxByE,EAAaxE,EAAI,IAAO,IACxByE,EAAaxE,EAAI,IAAO,IAC5B8C,SAASC,cACR,MACCoB,MAAMM,gBAFR,gDAEmEH,EAFnE,eAGAxB,SAASC,cACR,MACCoB,MAAMM,gBAFR,gDAEmEF,EAFnE,eAGAzB,SAASC,cACR,MACCoB,MAAMM,gBAFR,gDAEmED,EAFnE,kBAQeE,CAAKjB,IACrBA,EAAGmB,cAAgB,kBApCE,SAAAnB,GACOD,EAAxBC,EAAGO,aAAe,KAAe,GAC5BP,EAAGO,aAAe,KAAOP,EAAGO,YAAc,KAAe,GACpD,GACd/D,EAAIwD,EAAGO,YAAcR,EACrBC,EAAGoB,aAAa5E,EAAGA,GA+BM2E,CAAcnB,OAKxCX,SAASC,cAAc,YAAYC,iBAAiB,SAAS,YAI7D,WACC,IAAIhB,EACAlC,IAAMC,GAAKA,IAAMC,EAEnBgC,EADGlC,GAAK,IAAMC,GAAK,IAAMC,GAAK,GACtB,QACQ,MAANF,GAAmB,MAANC,GAAmB,MAANC,EAC5B,QAEA,WAGTiC,QAAQ,WACP,IAAM6C,EAAI7C,WAAY,CAAC,CAACnC,EAAI,IAAKC,EAAI,IAAKC,EAAI,OAE1C+E,EADUrF,EAAMsF,QAAQF,GACRG,OAAO,GAAGC,WAAW,GACzClD,EAAQ9B,EAAU6E,MAGpBjC,SAASC,cAAc,eAAeoC,UAAYnD,EAClDc,SAASC,cACR,QACCoC,UAFF,wCAE0CnD,EAF1C,SAtBAgD,MA2BDlC,SAASC,cAAc,SAASC,iBAAiB,QAAjD,sBAA0D,sBAAArC,EAAA,sEAC3CsB,kBAAmB,4BADwB,OACzDvC,EADyD,OAEzDoD,SAASC,cAAc,UAAUM,aAAa,WAAY,QAC1DP,SAASC,cAAc,YAAYO,WAAWC,gBAAgB,YAC9DT,SAASC,cAAc,SAASM,aAAa,WAAY,QAJA,6C","file":"static/js/main.04776c63.chunk.js","sourcesContent":["import * as tf from \"@tensorflow/tfjs\";\nimport * as tfvis from \"@tensorflow/tfjs-vis\";\nimport p5 from \"p5\";\nimport colorData from \"./colorData.json\";\n\nlet data;\nlet model;\nlet xs, ys;\nlet numEpochs = 100;\nlet labelList = [\n\t\"red-ish\",\n\t\"green-ish\",\n\t\"blue-ish\",\n\t\"orange-ish\",\n\t\"yellow-ish\",\n\t\"pink-ish\",\n\t\"purple-ish\",\n\t\"brown-ish\",\n\t\"grey-ish\"\n];\nlet colors = [];\nlet labels = [];\nlet shortData;\n\ndata = colorData;\nshortData = { entries: [] };\nfor (let i = 0; i < 25000; i++) {\n\tshortData.entries.push(data.entries[i]);\n}\nprepare(shortData);\n\nfunction prepare(data) {\n\tfor (let record of data.entries) {\n\t\tlet col = [record.r / 255, record.g / 255, record.b / 255];\n\t\tcolors.push(col);\n\t\tlabels.push(labelList.indexOf(record.label));\n\t}\n\txs = tf.tensor2d(colors);\n\tlet labelsTensor = tf.tensor1d(labels, \"int32\");\n\tys = tf.oneHot(labelsTensor, 9);\n\tlabelsTensor.dispose();\n\n\tmodel = tf.sequential();\n\n\tmodel.add(\n\t\ttf.layers.dense({\n\t\t\tunits: 16,\n\t\t\tactivation: \"sigmoid\",\n\t\t\tinputShape: [3]\n\t\t})\n\t);\n\n\tmodel.add(\n\t\ttf.layers.dense({\n\t\t\tunits: ys.shape[1],\n\t\t\tactivation: \"softmax\"\n\t\t})\n\t);\n\n\tconst optimizer = tf.train.adam(0.01);\n\tmodel.compile({\n\t\toptimizer: optimizer,\n\t\tloss: \"categoricalCrossentropy\",\n\t\tmetrics: [\"accuracy\"]\n\t});\n}\n\nasync function train(model, xs, ys, fitCallbacks) {\n\tconst options = {\n\t\tepochs: numEpochs,\n\t\tvalidationSplit: 0.2,\n\t\tcallbacks: fitCallbacks,\n\t\tbatchSize: Math.floor(ys.shape[0] / 5),\n\t\tshuffle: true\n\t};\n\treturn await model.fit(xs, ys, options);\n}\n\nasync function watchTraining() {\n\tconst metrics = [\"loss\", \"val_loss\", \"acc\", \"val_acc\"];\n\tconst container = {\n\t\tname: \"Model Accuracy\",\n\t\ttab: \"Training\",\n\t\tstyles: {\n\t\t\theight: \"1000px\"\n\t\t}\n\t};\n\tconst callbacks = tfvis.show.fitCallbacks(container, metrics);\n\treturn await train(model, xs, ys, callbacks);\n}\n\ndocument.querySelector(\"#train\").addEventListener(\"click\", () =>\n\twatchTraining().then(() => {\n\t\tsetTimeout(() => tfvis.visor().toggle(), 3000);\n\t\txs.dispose();\n\t\tys.dispose();\n\t\tdocument.querySelector(\"#train\").setAttribute(\"disabled\", \"true\");\n\t\tdocument.querySelector(\"#load\").setAttribute(\"disabled\", \"true\");\n\t\tdocument.querySelector(\"#predict\").attributes.removeNamedItem(\"disabled\");\n\t})\n);\n\nlet r, g, b;\nlet w;\nlet factor = 0.3;\n\nconst setup = p5 => {\n\tconst q = document.querySelector(\"#layers\");\n\tfor (let i = 0; i < 1; i++) {\n\t\tlet p = p5.createElement(\n\t\t\t\"model-element\",\n\t\t\t`<div class=\"model-element\"><h2>Dense (16, sigmoid)<h2></div>`\n\t\t);\n\t\tp.id(`e-${i}`);\n\t\tp.parent(q);\n\t}\n\n\tif (p5.windowWidth >= 1100) factor = 0.4;\n\telse if (p5.windowWidth >= 670 && p5.windowWidth < 1100) factor = 0.5;\n\telse factor = 0.7;\n\n\tw = p5.windowWidth * factor;\n\tconst c = p5.createCanvas(w, w);\n\tc.parent(\"sketch-holder\");\n\tr = p5.random(255);\n\tg = p5.random(255);\n\tb = p5.random(255);\n\tdocument.querySelector(\"#e-i\").style.backgroundColor = p5.color(r, g, b);\n\tdocument.querySelector(\".r\").style.backgroundColor = p5.color(r, 0, 0);\n\tdocument.querySelector(\".g\").style.backgroundColor = p5.color(0, g, 0);\n\tdocument.querySelector(\".b\").style.backgroundColor = p5.color(0, 0, b);\n\tlet r_percent = p5.floor((r / 255) * 100);\n\tlet g_percent = p5.floor((g / 255) * 100);\n\tlet b_percent = p5.floor((b / 255) * 100);\n\tdocument.querySelector(\n\t\t\".r\"\n\t).style.backgroundImage = `linear-gradient(to right, transparent ${r_percent}%, white 0)`;\n\tdocument.querySelector(\n\t\t\".g\"\n\t).style.backgroundImage = `linear-gradient(to right, transparent ${g_percent}%, white 0)`;\n\tdocument.querySelector(\n\t\t\".b\"\n\t).style.backgroundImage = `linear-gradient(to right, transparent ${b_percent}%, white 0)`;\n};\n\nconst windowResized = p5 => {\n\tif (p5.windowWidth >= 1100) factor = 0.4;\n\telse if (p5.windowWidth >= 670 && p5.windowWidth < 1100) factor = 0.5;\n\telse factor = 0.7;\n\tw = p5.windowWidth * factor;\n\tp5.resizeCanvas(w, w);\n};\n\nconst draw = p5 => {\n\tp5.background(r, g, b);\n\tdocument.querySelector(\"#new\").addEventListener(\"click\", () => {\n\t\tr = p5.random(255);\n\t\tg = p5.random(255);\n\t\tb = p5.random(255);\n\t\tdocument.querySelector(\"#e-i\").style.backgroundColor = p5.color(r, g, b);\n\t\tdocument.querySelector(\".r\").style.backgroundColor = p5.color(r, 0, 0);\n\t\tdocument.querySelector(\".g\").style.backgroundColor = p5.color(0, g, 0);\n\t\tdocument.querySelector(\".b\").style.backgroundColor = p5.color(0, 0, b);\n\t\tlet r_percent = (r / 255) * 100;\n\t\tlet g_percent = (g / 255) * 100;\n\t\tlet b_percent = (b / 255) * 100;\n\t\tdocument.querySelector(\n\t\t\t\".r\"\n\t\t).style.backgroundImage = `linear-gradient(to right, transparent ${r_percent}%, white 0)`;\n\t\tdocument.querySelector(\n\t\t\t\".g\"\n\t\t).style.backgroundImage = `linear-gradient(to right, transparent ${g_percent}%, white 0)`;\n\t\tdocument.querySelector(\n\t\t\t\".b\"\n\t\t).style.backgroundImage = `linear-gradient(to right, transparent ${b_percent}%, white 0)`;\n\t});\n};\n\nconst sketch = p5 => {\n\tp5.setup = () => setup(p5);\n\tp5.draw = () => draw(p5);\n\tp5.windowResized = () => windowResized(p5);\n};\n\nnew p5(sketch);\n\ndocument.querySelector(\"#predict\").addEventListener(\"click\", () => {\n\tpredict();\n});\n\nfunction predict() {\n\tlet label;\n\tif (r === g && g === b) {\n\t\tif (r <= 30 && g <= 30 && b <= 30) {\n\t\t\tlabel = \"black\";\n\t\t} else if (r === 255 && g === 255 && b === 255) {\n\t\t\tlabel = \"white\";\n\t\t} else {\n\t\t\tlabel = \"grey-ish\";\n\t\t}\n\t} else {\n\t\ttf.tidy(() => {\n\t\t\tconst x = tf.tensor2d([[r / 255, g / 255, b / 255]]);\n\t\t\tlet results = model.predict(x);\n\t\t\tlet index = results.argMax(1).dataSync()[0];\n\t\t\tlabel = labelList[index];\n\t\t});\n\t}\n\tdocument.querySelector(\"#prediction\").innerHTML = label;\n\tdocument.querySelector(\n\t\t\"#e-o\"\n\t).innerHTML = `<h2>Dense (9, softmax) → ${label}</h2>`;\n}\n\ndocument.querySelector(\"#load\").addEventListener(\"click\", async () => {\n\tmodel = await tf.loadLayersModel(\"./model/color-model.json\");\n\tdocument.querySelector(\"#train\").setAttribute(\"disabled\", \"true\");\n\tdocument.querySelector(\"#predict\").attributes.removeNamedItem(\"disabled\");\n\tdocument.querySelector(\"#load\").setAttribute(\"disabled\", \"true\");\n});\n"],"sourceRoot":""}